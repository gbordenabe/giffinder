{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","img","GifGridItem","className","src","alt","GifGrid","style","textAlign","justifyContent","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mLAwCeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,sBAAMC,SAZU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAgB,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAOlB,SACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCQdG,EAhBJ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAEgCF,EAFhC,+DAGOG,MAAMD,GAHb,cAGNE,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAClC,MAAO,CACLF,GAAIA,EACJC,MAAOA,EACPR,IAAG,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBV,QAVtB,kBAaLK,GAbK,4CAAH,sDCqBEM,EAlBM,SAACb,GACpB,MAA0Bd,mBAAS,CACjCoB,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,GCNMK,EAVK,SAAC,GAAqB,EAApBX,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,IAE7B,OACI,sBAAKmB,UAAU,yCAAf,UACI,qBAAKC,IAAKpB,EAAKqB,IAAKb,IACpB,4BAAIA,QCaDc,EAhBC,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SACjB,EAAiCa,EAAab,GAAjCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAErB,OACE,qCACE,oBAAIO,UAAU,oCAAoCI,MAAO,CAACC,UAAW,UAArE,SAAiF1B,IAChFc,GAAW,mBAAGO,UAAU,mCAAmCI,MAAO,CAACC,UAAW,UAAnE,qBACZ,qBAAKL,UAAU,YAAYI,MAAO,CAAEE,eAAgB,UAApD,SACGhB,EAAOH,KAAI,SAACW,GACX,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIV,aCSxBmB,EAlBM,WACnB,MAAoC1C,mBAAS,CAAC,aAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG4C,EAAWrB,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCTxB8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6a11df75.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const hadleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories ( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={hadleSubmit}> \r\n        <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=3XZ5Ewyuql6W28gN1ze8cNstjcOYaykT`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(({ id, title, images }) => {\r\n      return {\r\n        id: id,\r\n        title: title,\r\n        url: images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };\r\n\r\n  export default getGifs;","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((img) => {\r\n      setState({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React /*, { useEffect, useState }*/ from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h2 className='animate__animated animate__fadeIn' style={{textAlign: \"center\"}}>{category}</h2>\r\n      {loading && <p className='animate__animated animate__flash' style={{textAlign: \"center\"}}>Loading</p>}\r\n      <div className=\"card-grid\" style={{ justifyContent: \"center\"}}>\r\n        {images.map((img) => {\r\n          return <GifGridItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"OnePunch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category}/>\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}